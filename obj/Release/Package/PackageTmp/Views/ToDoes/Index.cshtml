@using ToDoApp.Models

@model ToDo

@{
    ViewBag.Title = "ToDo List Application";
}

<div style="height: 50px;"></div>

<button id="showModal" type="button" class="btn btn-secondary" data-toggle="modal" data-target="#createModal">
    Add New
</button>

<div id="tableDiv"></div>

<div id="todoCreateForm">
    @using (Ajax.BeginForm("AJAXCreate", "ToDoes", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        UpdateTargetId = "tableDiv"
    }))
    {
        <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Add New</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group myForm">
                            @Html.AntiForgeryToken()
                            <div>
                                <label for="itemEdit">Item</label>
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", id = "itemEdit", @required = "required" } })
                                <label id="modalLabel" for="priorityDropdown">Priority</label>
                                @Html.DropDownListFor(model => model.Priority, new SelectList(Enum.GetValues(typeof(Priority))), new { @class = "form-control", id = "priorityDropdown" })
                                <label id="modalLabel" for="itemDate">Due Date</label>
                                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", id = "itemDate", type = "date" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-secondary" id="btnCreate">Create</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Custom_Scripts/BuildTable.js"></script>
    <script src="~/Custom_Scripts/ButtonCreateListener.js"></script>
    <script src="~/Custom_Scripts/ClearModal.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}
